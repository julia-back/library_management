services:

  nginx:
    build: ./nginx/
    ports:
      - 80:80
    depends_on:
      - web
    restart: on-failure

  web:
    build: .
    environment:
      - DB_HOST=db
      - CACHE_LOCATION=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    command: >
      bash -c "poetry run python manage.py migrate 
      && poetry run gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - 8000
    volumes:
      - media_data:/app/media
    depends_on:
      - db
    restart: on-failure

  db:
    image: postgres:17.4
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: on-failure

  redis:
    image: redis:latest
    env_file:
      - .env
    expose:
      - 6379
    volumes:
      - redis_data:/data
    restart: on-failure

  celery:
    build: .
    environment:
      - DB_HOST=db
      - CACHE_LOCATION=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    command: >
      bash -c "poetry run celery -A config worker -l INFO -P gevent"
    expose:
      - 8000
    depends_on:
      - redis
    restart: on-failure

  celery-beat:
    build: .
    environment:
      - DB_HOST=db
      - CACHE_LOCATION=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    env_file:
      - .env
    command: bash -c "poetry run celery -A config beat -l INFO"
    expose:
      - 8000
    depends_on:
      - redis
    restart: on-failure


networks:
  default:


volumes:
  postgres_data:
  media_data:
  redis_data:
